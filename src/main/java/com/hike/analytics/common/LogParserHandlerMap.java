package com.hike.analytics.common;

import java.util.HashMap;
import java.util.Map;

import com.bsb.hike.analytics.hive.udtf.ABUpdateHandler;
import com.bsb.hike.analytics.hive.udtf.ADVLogHandler;
import com.bsb.hike.analytics.hive.udtf.AH2OHandler;
import com.bsb.hike.analytics.hive.udtf.AbstractLogHandler;
import com.bsb.hike.analytics.hive.udtf.AccountHandler;
import com.bsb.hike.analytics.hive.udtf.AccountInfoHandler;
import com.bsb.hike.analytics.hive.udtf.AccountLoginHandler;
import com.bsb.hike.analytics.hive.udtf.AckHandler;
import com.bsb.hike.analytics.hive.udtf.ActivationHandler;
import com.bsb.hike.analytics.hive.udtf.AddressbookHandler;
import com.bsb.hike.analytics.hive.udtf.AppLogHandler;
import com.bsb.hike.analytics.hive.udtf.AppSessionHandler;
import com.bsb.hike.analytics.hive.udtf.AppUpdateHandler;
import com.bsb.hike.analytics.hive.udtf.AssgnHandler;
import com.bsb.hike.analytics.hive.udtf.AutoApkHandler;
import com.bsb.hike.analytics.hive.udtf.BirthdayTipHandler;
import com.bsb.hike.analytics.hive.udtf.BlockHandler;
import com.bsb.hike.analytics.hive.udtf.BotLogHandler;
import com.bsb.hike.analytics.hive.udtf.CBotHandler;
import com.bsb.hike.analytics.hive.udtf.CarmatchHandler;
import com.bsb.hike.analytics.hive.udtf.ChatBackgroundHandler;
import com.bsb.hike.analytics.hive.udtf.CheckOutHandler;
import com.bsb.hike.analytics.hive.udtf.ClLogHandler;
import com.bsb.hike.analytics.hive.udtf.ClientLogHandler;
import com.bsb.hike.analytics.hive.udtf.ConnectEventHandler;
import com.bsb.hike.analytics.hive.udtf.ContestFramework;
import com.bsb.hike.analytics.hive.udtf.CpnsIssHandler;
import com.bsb.hike.analytics.hive.udtf.CreditsHandler;
import com.bsb.hike.analytics.hive.udtf.DNDHandler;
import com.bsb.hike.analytics.hive.udtf.DeviceDetailHandler;
import com.bsb.hike.analytics.hive.udtf.EngagementMeterHandler;
import com.bsb.hike.analytics.hive.udtf.FDHandler;
import com.bsb.hike.analytics.hive.udtf.FavouriteHandler;
import com.bsb.hike.analytics.hive.udtf.FileUploadHandler;
import com.bsb.hike.analytics.hive.udtf.FriendshipHandler;
import com.bsb.hike.analytics.hive.udtf.GameServerHandler;
import com.bsb.hike.analytics.hive.udtf.GlobalInviteHandler;
import com.bsb.hike.analytics.hive.udtf.GroupChatHandler;
import com.bsb.hike.analytics.hive.udtf.HikeExtrasHandler;
import com.bsb.hike.analytics.hive.udtf.HikeSantaHandler;
import com.bsb.hike.analytics.hive.udtf.HikeSantiHandler;
import com.bsb.hike.analytics.hive.udtf.HikeUDTFConstants;
import com.bsb.hike.analytics.hive.udtf.HikeVersionHandler;
import com.bsb.hike.analytics.hive.udtf.HopprRewardsHandler;
import com.bsb.hike.analytics.hive.udtf.InstruLogHandler;
import com.bsb.hike.analytics.hive.udtf.InviteHandler;
import com.bsb.hike.analytics.hive.udtf.InviteeJoined;
import com.bsb.hike.analytics.hive.udtf.LocationLogHandler;
import com.bsb.hike.analytics.hive.udtf.LogEventHandler;
import com.bsb.hike.analytics.hive.udtf.LoveStatus;
import com.bsb.hike.analytics.hive.udtf.MLEHandler;
import com.bsb.hike.analytics.hive.udtf.MQStatsHandler;
import com.bsb.hike.analytics.hive.udtf.Md5mismatchLogHandler;
import com.bsb.hike.analytics.hive.udtf.MessageHandler;
import com.bsb.hike.analytics.hive.udtf.MessageStateHandler;
import com.bsb.hike.analytics.hive.udtf.MicroappInstallHandler;
import com.bsb.hike.analytics.hive.udtf.MultiForwardHandler;
import com.bsb.hike.analytics.hive.udtf.MuteUnmuteHandler;
import com.bsb.hike.analytics.hive.udtf.NatashaLogHandler;
import com.bsb.hike.analytics.hive.udtf.NuxHandler;
import com.bsb.hike.analytics.hive.udtf.OptInHandler;
import com.bsb.hike.analytics.hive.udtf.PageViewHandler;
import com.bsb.hike.analytics.hive.udtf.PhoneDetailHandler;
import com.bsb.hike.analytics.hive.udtf.PhoneNetworkHandler;
import com.bsb.hike.analytics.hive.udtf.PinHandler;
import com.bsb.hike.analytics.hive.udtf.PlatServerHandler;
import com.bsb.hike.analytics.hive.udtf.PreActivationHandler;
import com.bsb.hike.analytics.hive.udtf.ProfileHandler;
import com.bsb.hike.analytics.hive.udtf.RelavantSuggestsHandler;
import com.bsb.hike.analytics.hive.udtf.ReliabilityHandler;
import com.bsb.hike.analytics.hive.udtf.RewardPointsHandler;
import com.bsb.hike.analytics.hive.udtf.RewardRetailer;
import com.bsb.hike.analytics.hive.udtf.RewardVariant;
import com.bsb.hike.analytics.hive.udtf.RewardsOfferHandler;
import com.bsb.hike.analytics.hive.udtf.SMSCPHandler;
import com.bsb.hike.analytics.hive.udtf.SessionHandler;
import com.bsb.hike.analytics.hive.udtf.SignupServerHandler;
import com.bsb.hike.analytics.hive.udtf.SinchSignupHandler;
import com.bsb.hike.analytics.hive.udtf.SmsDeliveryHandler;
import com.bsb.hike.analytics.hive.udtf.SmsSendHandler;
import com.bsb.hike.analytics.hive.udtf.SpamHandler;
import com.bsb.hike.analytics.hive.udtf.StaticApiHandler;
import com.bsb.hike.analytics.hive.udtf.StatusHandler;
import com.bsb.hike.analytics.hive.udtf.StealthEventHandler;
import com.bsb.hike.analytics.hive.udtf.StickerShopHandler;
import com.bsb.hike.analytics.hive.udtf.SuViewHandler;
import com.bsb.hike.analytics.hive.udtf.SubscibeEventHandle;
import com.bsb.hike.analytics.hive.udtf.TTRCRHandler;
import com.bsb.hike.analytics.hive.udtf.TestHandler;
import com.bsb.hike.analytics.hive.udtf.TtrRedeemHandler;
import com.bsb.hike.analytics.hive.udtf.UJNHandler;
import com.bsb.hike.analytics.hive.udtf.UnparsedLogHandler;
import com.bsb.hike.analytics.hive.udtf.UserProfileHandler;
import com.bsb.hike.analytics.hive.udtf.ValentineHandler;
import com.bsb.hike.analytics.hive.udtf.VariousOptInHandler;
import com.bsb.hike.analytics.hive.udtf.WoneUJHandler;

public class LogParserHandlerMap {
	public static final String MULTIFORWARD = "mm";
	public static final String SMS_CP   = "sms_cp";
	public static final String TTR_CP = "ttr_cp";
	public static final String REL_M  = "rel_m";
	public static final String SESS = "sess";
	public static final String INSTRU = "instru";
	public static final String BOT = "bot";
	public static final String MD5MISMATCH    =  "MD5mismatch";
	public static final String ADV ="adv";
	public static final String CL ="cl";
	public static final String W1UJ = "w1uj";
	
	private static Map<String, AbstractLogHandler> handlerMap = null;
	
	private static final MessageHandler messageHandlerTypeM = new MessageHandler("m");
	private static final MessageHandler messageHandlerTypeFileTransfer = new MessageHandler("filetransfer");
	private static final MessageHandler messageHandlerTypeFsms = new MessageHandler("fsms");
	private static final LogEventHandler logEventHandlerTypeLe = new LogEventHandler("le");
	private static final LogEventHandler logEventHandlerTypeApp = new LogEventHandler("app");
	private static final InviteHandler inviteHandlerTypeI = new InviteHandler("i");
	private static final InviteeJoined inviteeJoinedTypeUj = new InviteeJoined("uj");
	private static final GlobalInviteHandler globalInviteHandlerTypeMi = new GlobalInviteHandler("mi");
	private static final BlockHandler blockHandlerTypeB = new BlockHandler("b");
	private static final BlockHandler blockHandlerTypeUb = new BlockHandler("ub");
	private static final VariousOptInHandler variousOptInHandlerTypeSmsOptin = new VariousOptInHandler("smsoptin");
	private static final VariousOptInHandler variousOptInHandlerTypeDndOptout = new VariousOptInHandler("dndoptout");
	private static final VariousOptInHandler variousOptInHandlerTypeDndOptin = new VariousOptInHandler("dndoptin");
	private static final GroupChatHandler groupChatHandlerTypeGm = new GroupChatHandler("gm");
	private static final GroupChatHandler groupChatHandlerTypeBm = new GroupChatHandler("bm");
	private static final StatusHandler statusHandlerTypeSu = new StatusHandler("su");
	private static final AccountHandler accountHandlerTypeLogin = new AccountHandler("login");
	private static final AccountHandler accountHandlerTypeDelete = new AccountHandler("delete");
	private static final AccountHandler accountHandlerTypeUnLink = new AccountHandler("unlink");
	private static final AddressbookHandler addressbookHandlerTypeAddrBook = new AddressbookHandler("addressbook");
	private static final FriendshipHandler friendshipHandlerTypeAf = new FriendshipHandler(HikeUDTFConstants.ADD_FRIEND);
	private static final FriendshipHandler friendshipHandlerTypeRf = new FriendshipHandler(HikeUDTFConstants.REMOVE_FRIEND);
	private static final FriendshipHandler friendshipHandlerTypePf = new FriendshipHandler(HikeUDTFConstants.PENDING_FRIEND);
	private static final MuteUnmuteHandler muteUnmuteHandlerTypeMute = new MuteUnmuteHandler(HikeUDTFConstants.MUTE);
	private static final MuteUnmuteHandler muteUnmuteHandlerTypeUnMute = new MuteUnmuteHandler(HikeUDTFConstants.UNMUTE);
	private static final AppUpdateHandler appUpdateHandlerTypeAppUpdate = new AppUpdateHandler("appupdate");
	private static final ProfileHandler profileHandlerTypeAc = new ProfileHandler("ac");
	private static final PinHandler pinHandlerTypePincall = new PinHandler("pincall");
	private static final PinHandler pinHandlerTypePin = new PinHandler("pin");
	private static final UserProfileHandler userProfileHandlerTypeProfile = new UserProfileHandler("profile");
	private static final RewardPointsHandler rewardPointsHandlerTypeRp = new RewardPointsHandler(HikeUDTFConstants.REWARD_POINTS);
	private static final EngagementMeterHandler engagementMeterHandlerTypeEm = new EngagementMeterHandler(HikeUDTFConstants.ENGAGEMENT_METER);
	private static final RewardsOfferHandler rewardsOfferHandlerTypeOffer = new RewardsOfferHandler(HikeUDTFConstants.KINGDOM_OFFER);
	private static final DNDHandler dndHandlerTypeOnDnd = new DNDHandler("ondnd");
	private static final PageViewHandler pageViewHandlerTypeWebpage = new PageViewHandler("webpage");
	private static final ChatBackgroundHandler chatBackgroundHandlerTypeCbg = new ChatBackgroundHandler("cbg");
	private static final ChatBackgroundHandler chatBackgroundHandlerTypeGcbg = new ChatBackgroundHandler("gcbg");
	private static final MessageStateHandler messageStateHandlerTypeMr = new MessageStateHandler("mr");
	private static final MessageStateHandler messageStateHandlerTypeDr = new MessageStateHandler("dr");
	private static final StealthEventHandler stealthEventHandlerTypeStlth = new StealthEventHandler("stlth");
	private static final StealthEventHandler stealthEventHandlerTypeTs = new StealthEventHandler("ts");
	private static final ConnectEventHandler connectEventHandlerTypeDevconnect = new ConnectEventHandler("devconnect");
	private static final ConnectEventHandler connectEventHandlerTypeDevdisconnect = new ConnectEventHandler("devdisconnect");
	private static final RelavantSuggestsHandler relavantSuggestsHandlerTypeReleventChat = new RelavantSuggestsHandler("relevant_chat");
	private static final MLEHandler mleHandlerTypeMle = new MLEHandler("mle");
	private static final AccountInfoHandler accountInfoHandlerTypeAccInfo = new AccountInfoHandler("account-info");
	private static final AH2OHandler ah2oHandlerTypeAh2ho = new AH2OHandler("ah2ho");
	private static final CreditsHandler creditsHandlerTypeCi = new CreditsHandler("ci");
	private static final HopprRewardsHandler hopprRewardsHandlerTypeHoppr = new HopprRewardsHandler("hoppr");
	private static final UJNHandler ujnHandlerTypeUjn = new UJNHandler("ujn");
	private static final HikeExtrasHandler hikeExtrasHandlerTypeHikeExtras = new HikeExtrasHandler("hike_extras");
	private static final MultiForwardHandler multiForwardHandlerTypeMm = new MultiForwardHandler(MULTIFORWARD);
	private static final BirthdayTipHandler birthdayTipHandlerTypeHbday = new BirthdayTipHandler("hbday");
	private static final StickerShopHandler stickerShopHandlerTypeStickers = new StickerShopHandler("StickersHandler");
	private static final StickerShopHandler stickerShopHandlerTypeShop = new StickerShopHandler("Shop");
	private static final FileUploadHandler fileUploadHandlerTypeFtui = new FileUploadHandler("ftui");
	private static final TtrRedeemHandler ttrRedeemHandlerTypeTtrReddem = new TtrRedeemHandler("ttr_redeem");
	private static final NuxHandler nuxHandlerTypeNuxbot = new NuxHandler("nuxbot");
	private static final NuxHandler nuxHandlerTypeNux = new NuxHandler("nux");
	private static final SMSCPHandler smscpHandlerTypeSmsCp = new SMSCPHandler("SMS_CP");
	private static final TTRCRHandler ttrcrHandlerTypeTtrCp = new TTRCRHandler("TTR_CP");
	private static final ActivationHandler activationHandlerTypePaiid = new ActivationHandler("paiid");
	private static final PreActivationHandler preActivationHandlerTypePa = new PreActivationHandler("pa");
	private static final LocationLogHandler locationLogHandlerTypell = new LocationLogHandler("ll");
	private static final AppLogHandler appLogHandlerTypeAl = new AppLogHandler("al");
	private static final NatashaLogHandler natashaLogHandlerTypeMona = new NatashaLogHandler("mona");
	private static final ClientLogHandler clientLogHandlerTypeClitics = new ClientLogHandler("clitics");
	private static final ReliabilityHandler reliabilityHandlerTypeRelM = new ReliabilityHandler("REL_M");
	private static final SessionHandler sessionHandlerTypeSess = new SessionHandler(SESS);
	private static final InstruLogHandler instruLogHandlerTypeInstru = new InstruLogHandler(INSTRU);
	private static final BotLogHandler botLogHandlerTypeBot = new BotLogHandler(BOT);
	private static final Md5mismatchLogHandler md5mismatchLogHandlerTypeMd5Mismatch = new Md5mismatchLogHandler(MD5MISMATCH);
	private static final ADVLogHandler advLogHandlerTypeAvd = new ADVLogHandler(ADV);
	private static final ClLogHandler clLogHandlerTypeCl = new ClLogHandler(CL);
	private static final WoneUJHandler woneUJHandlerTypeW1uj = new WoneUJHandler(W1UJ);
	private static final AppSessionHandler appSessionHandlerTypeStl = new AppSessionHandler("stl");
	private static final PhoneDetailHandler phoneDetailHandlerTypePl = new PhoneDetailHandler("pl");
	private static final PhoneNetworkHandler phoneNetworkHandlerTypeNl = new PhoneNetworkHandler("nl");
	private static final FDHandler fdHandlerTypeFd = new FDHandler("fd");
	private static final SubscibeEventHandle subscibeEventHandleTypeSubUnsub = new SubscibeEventHandle("sub-unsub");
	private static final LoveStatus loveStatusTypeSuLove = new LoveStatus("su_love");
	private static final LoveStatus loveStatusTypeSuUnLove = new LoveStatus("su_unlove");
	private static final RewardRetailer rewardRetailerTypeRetailer = new RewardRetailer("retailer");
	private static final RewardVariant rewardVariantTypeVariant = new RewardVariant("variant");
	private static final ContestFramework contestFrameworkTypeCf = new ContestFramework("cf");
	private static final FavouriteHandler favouriteHandlerTypeFavExp = new FavouriteHandler("fav_exp");
	private static final CBotHandler cBotHandlerTypeAcack = new CBotHandler("ac-ack");
	private static final AckHandler ackHandlerTypeAck = new AckHandler("ack");
	private static final DeviceDetailHandler deviceDetailHandlerTypeDd = new DeviceDetailHandler("dd");
	private static final MicroappInstallHandler microappInstallHandlerTypeMicroAppInstallServ = new MicroappInstallHandler("microapp_installer_service");
	private static final SmsDeliveryHandler smsDeliveryHandlerTypeSmsdeliver = new SmsDeliveryHandler("smsdeliver");
	private static final OptInHandler optInHandlerTypeOptIn = new OptInHandler("opt_in");
	private static final AssgnHandler assgnHandlerTypeAssign = new AssgnHandler("assgn");
	private static final HikeSantaHandler hikeSantaHandlerTypeHikeSanta = new HikeSantaHandler("+hikesanta+");
	private static final CpnsIssHandler cpnsIssHandlerTypeCpnsIss = new CpnsIssHandler("cpns_iss");
	private static final HikeSantiHandler hikeSantiHandlerTypeHikeSanti = new HikeSantiHandler("+hikesanti+");
	private static final CarmatchHandler carmatchHandlerTypeCarMatch = new CarmatchHandler("carmatch");
	private static final ValentineHandler valentineHandlerTypeValtn = new ValentineHandler("valtn");
	private static final HikeVersionHandler hikeVersionHandlerTypeHikeV1 = new HikeVersionHandler("+hikev1+");
	private static final HikeVersionHandler hikeVersionHandlerTypeHikeV2 = new HikeVersionHandler("+hikev2+");
	private static final HikeVersionHandler hikeVersionHandlerTypeHikeV3 = new HikeVersionHandler("+hikev3+");
	private static final HikeVersionHandler hikeVersionHandlerTypeHikeV4 = new HikeVersionHandler("+hikev4+");
	private static final HikeVersionHandler hikeVersionHandlerTypeHikeV5 = new HikeVersionHandler("+hikev5+");
	private static final HikeVersionHandler hikeVersionHandlerTypeHikeV6 = new HikeVersionHandler("+hikev6+");
	private static final HikeVersionHandler hikeVersionHandlerTypeHikeV7 = new HikeVersionHandler("+hikev7+");
	private static final HikeVersionHandler hikeVersionHandlerTypeHikeV8 = new HikeVersionHandler("+hikev8+");
	private static final HikeVersionHandler hikeVersionHandlerTypeHikeV9 = new HikeVersionHandler("+hikev9+");
	private static final HikeVersionHandler hikeVersionHandlerTypeHikeV10 = new HikeVersionHandler("+hikev10+");
	private static final StaticApiHandler staticApiHandlerTypeStaticApi = new StaticApiHandler("static_api");
	private static final GameServerHandler gameServerHandlerType = new GameServerHandler("gameserver");
	private static final SpamHandler spamHandlerTypeTbe = new SpamHandler("tbe");
	private static final PlatServerHandler platServerHandlerTypePlatServer = new PlatServerHandler("plat_server");
	private static final SuViewHandler suViewHandlerTypeSuView = new SuViewHandler("su_view");
	private static final AccountLoginHandler accountLoginHandlerTypeActl = new AccountLoginHandler("actl");
	private static final TestHandler testHandlerTypeTest = new TestHandler("test");
	private static final CheckOutHandler checkOutHandlerTypeCheckoutServer = new CheckOutHandler("checkout_server");
	private static final AutoApkHandler autoApkHandler  = new AutoApkHandler("lapk");
	private static final ABUpdateHandler abUpdateHandler  = new ABUpdateHandler("abupdate");
	private static final MQStatsHandler mqstatsHandler  = new MQStatsHandler("mq-stats");
	private static final SinchSignupHandler sinchSignupHandler  = new SinchSignupHandler("sinch");
	private static final SignupServerHandler signupServerHandler  = new SignupServerHandler("signup");
	private static final SmsSendHandler smsSendHandler  = new SmsSendHandler("smssend");
	private static final UnparsedLogHandler unparsedHandler = new UnparsedLogHandler("unparsed");
	
	public LogParserHandlerMap() {
	}
	
	private static void initMap() {
		handlerMap = new HashMap<String, AbstractLogHandler>();
		handlerMap.put("m", messageHandlerTypeM);
		handlerMap.put("filetransfer", messageHandlerTypeFileTransfer);
		handlerMap.put("fsms", messageHandlerTypeFsms);
		handlerMap.put("le", logEventHandlerTypeLe);
		handlerMap.put("app", logEventHandlerTypeApp);
		handlerMap.put("i", inviteHandlerTypeI);
		handlerMap.put("uj", inviteeJoinedTypeUj);
		handlerMap.put("mi", globalInviteHandlerTypeMi);
		handlerMap.put("b", blockHandlerTypeB);
		handlerMap.put("ub", blockHandlerTypeUb);
		handlerMap.put("smsoptin", variousOptInHandlerTypeSmsOptin);
		handlerMap.put("dndoptout", variousOptInHandlerTypeDndOptout);
		handlerMap.put("dndoptin", variousOptInHandlerTypeDndOptin);
		handlerMap.put("gm", groupChatHandlerTypeGm);
		handlerMap.put("bm", groupChatHandlerTypeBm);
		handlerMap.put("su", statusHandlerTypeSu);
		handlerMap.put("login", accountHandlerTypeLogin);
		handlerMap.put("delete", accountHandlerTypeDelete);
		handlerMap.put("unlink", accountHandlerTypeUnLink);
		handlerMap.put("addressbook", addressbookHandlerTypeAddrBook);
		handlerMap.put(HikeUDTFConstants.ADD_FRIEND, friendshipHandlerTypeAf);
		handlerMap.put(HikeUDTFConstants.REMOVE_FRIEND, friendshipHandlerTypeRf);
		handlerMap.put(HikeUDTFConstants.PENDING_FRIEND, friendshipHandlerTypePf);
		handlerMap.put(HikeUDTFConstants.MUTE, muteUnmuteHandlerTypeMute);
		handlerMap.put(HikeUDTFConstants.UNMUTE, muteUnmuteHandlerTypeUnMute);
		handlerMap.put("appupdate", appUpdateHandlerTypeAppUpdate);
		handlerMap.put("ac", profileHandlerTypeAc);
		handlerMap.put("pincall", pinHandlerTypePincall);
		handlerMap.put("pin", pinHandlerTypePin);
		handlerMap.put("profile", userProfileHandlerTypeProfile);
		handlerMap.put(HikeUDTFConstants.REWARD_POINTS, rewardPointsHandlerTypeRp);
		handlerMap.put(HikeUDTFConstants.ENGAGEMENT_METER, engagementMeterHandlerTypeEm);
		handlerMap.put(HikeUDTFConstants.KINGDOM_OFFER, rewardsOfferHandlerTypeOffer);
		handlerMap.put("ondnd", dndHandlerTypeOnDnd);
		handlerMap.put("webpage", pageViewHandlerTypeWebpage);
		handlerMap.put("cbg", chatBackgroundHandlerTypeCbg);
		handlerMap.put("gcbg", chatBackgroundHandlerTypeGcbg);
		handlerMap.put("mr", messageStateHandlerTypeMr);
		handlerMap.put("dr", messageStateHandlerTypeDr);
		handlerMap.put("stlth", stealthEventHandlerTypeStlth);
		handlerMap.put("ts", stealthEventHandlerTypeTs);
		handlerMap.put("devconnect", connectEventHandlerTypeDevconnect);
		handlerMap.put("devdisconnect", connectEventHandlerTypeDevdisconnect);
		handlerMap.put("relevant_chat", relavantSuggestsHandlerTypeReleventChat);
		handlerMap.put("mle", mleHandlerTypeMle);
		handlerMap.put("account-info", accountInfoHandlerTypeAccInfo);
		handlerMap.put("ah2ho", ah2oHandlerTypeAh2ho);
		handlerMap.put("ci", creditsHandlerTypeCi);
		handlerMap.put("hoppr", hopprRewardsHandlerTypeHoppr);
		handlerMap.put("ujn", ujnHandlerTypeUjn);
		handlerMap.put("hike_extras", hikeExtrasHandlerTypeHikeExtras);
		handlerMap.put(MULTIFORWARD, multiForwardHandlerTypeMm);
		handlerMap.put("hbday", birthdayTipHandlerTypeHbday);
		handlerMap.put("StickersHandler", stickerShopHandlerTypeStickers);
		handlerMap.put("Shop", stickerShopHandlerTypeShop);
		handlerMap.put("ftui", fileUploadHandlerTypeFtui);
		handlerMap.put("ttr_redeem", ttrRedeemHandlerTypeTtrReddem);
		handlerMap.put("nuxbot", nuxHandlerTypeNuxbot);
		handlerMap.put("nux", nuxHandlerTypeNux);
		handlerMap.put("SMS_CP", smscpHandlerTypeSmsCp);
		handlerMap.put("TTR_CP", ttrcrHandlerTypeTtrCp);
		handlerMap.put("paiid", activationHandlerTypePaiid);
		handlerMap.put("pa", preActivationHandlerTypePa);
		handlerMap.put("ll", locationLogHandlerTypell);
		handlerMap.put("al", appLogHandlerTypeAl);
		handlerMap.put("mona", natashaLogHandlerTypeMona);
		handlerMap.put("clitics", clientLogHandlerTypeClitics);
		handlerMap.put("REL_M", reliabilityHandlerTypeRelM);
		handlerMap.put(SESS, sessionHandlerTypeSess);
		handlerMap.put(INSTRU, instruLogHandlerTypeInstru);
		handlerMap.put(BOT, botLogHandlerTypeBot);
		handlerMap.put(MD5MISMATCH, md5mismatchLogHandlerTypeMd5Mismatch);
		handlerMap.put(ADV, advLogHandlerTypeAvd);
		handlerMap.put(CL, clLogHandlerTypeCl);
		handlerMap.put(W1UJ, woneUJHandlerTypeW1uj);
		handlerMap.put("stl", appSessionHandlerTypeStl);
		handlerMap.put("pl", phoneDetailHandlerTypePl);
		handlerMap.put("nl", phoneNetworkHandlerTypeNl);
		handlerMap.put("fd", fdHandlerTypeFd);
		handlerMap.put("sub-unsub", subscibeEventHandleTypeSubUnsub);
		handlerMap.put("su_love", loveStatusTypeSuLove);
		handlerMap.put("su_unlove", loveStatusTypeSuUnLove);
		handlerMap.put("retailer", rewardRetailerTypeRetailer);
		handlerMap.put("variant", rewardVariantTypeVariant);
		handlerMap.put("cf", contestFrameworkTypeCf);
		handlerMap.put("fav_exp", favouriteHandlerTypeFavExp);
		handlerMap.put("ac-ack", cBotHandlerTypeAcack);
		handlerMap.put("ack", ackHandlerTypeAck);
		handlerMap.put("dd", deviceDetailHandlerTypeDd);
		handlerMap.put("microapp_installer_service", microappInstallHandlerTypeMicroAppInstallServ);
		handlerMap.put("smsdeliver", smsDeliveryHandlerTypeSmsdeliver);
		handlerMap.put("opt_in", optInHandlerTypeOptIn);
		handlerMap.put("assgn", assgnHandlerTypeAssign);
		handlerMap.put("+hikesanta+", hikeSantaHandlerTypeHikeSanta);
		handlerMap.put("cpns_iss", cpnsIssHandlerTypeCpnsIss);
		handlerMap.put("+hikesanti+", hikeSantiHandlerTypeHikeSanti);
		handlerMap.put("carmatch", carmatchHandlerTypeCarMatch);
		handlerMap.put("valtn", valentineHandlerTypeValtn);
		handlerMap.put("+hikev1+", hikeVersionHandlerTypeHikeV1);
		handlerMap.put("+hikev2+", hikeVersionHandlerTypeHikeV2);
		handlerMap.put("+hikev3+", hikeVersionHandlerTypeHikeV3 );
		handlerMap.put("+hikev4+", hikeVersionHandlerTypeHikeV4 );
		handlerMap.put("+hikev5+", hikeVersionHandlerTypeHikeV5 );
		handlerMap.put("+hikev6+", hikeVersionHandlerTypeHikeV6 );
		handlerMap.put("+hikev7+", hikeVersionHandlerTypeHikeV7 );
		handlerMap.put("+hikev8+", hikeVersionHandlerTypeHikeV8 );
		handlerMap.put("+hikev9+", hikeVersionHandlerTypeHikeV9 );
		handlerMap.put("+hikev10+",hikeVersionHandlerTypeHikeV10);
		handlerMap.put("static_api", staticApiHandlerTypeStaticApi);
		handlerMap.put("gameserver", gameServerHandlerType);
		handlerMap.put("tbe", spamHandlerTypeTbe);
		handlerMap.put("plat_server", platServerHandlerTypePlatServer);
		handlerMap.put("su_view", suViewHandlerTypeSuView);
		handlerMap.put("actl", accountLoginHandlerTypeActl);
		handlerMap.put("test", testHandlerTypeTest);
		handlerMap.put("checkout_server", checkOutHandlerTypeCheckoutServer);
		handlerMap.put("lapk", autoApkHandler);
		handlerMap.put("abupdate", abUpdateHandler);
		handlerMap.put("mq-stats", mqstatsHandler);
		handlerMap.put("sinch", sinchSignupHandler);
		handlerMap.put("signup", signupServerHandler);
		handlerMap.put("smssend", smsSendHandler);
		handlerMap.put("unparsed", unparsedHandler);
		handlerMap.put("", null);
	}
	
	private static Map<String,AbstractLogHandler> get() {
		if(handlerMap == null) {
			synchronized (LogParserHandlerMap.class) {
				initMap();
			}
		}
		return handlerMap;
	}
	
	public static AbstractLogHandler getLogHandler(String type) {
		return get().get(type);
	}
	

}
